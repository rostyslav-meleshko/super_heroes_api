{"version":3,"sources":["store/actions.ts","types.ts","store/rootStore.ts","store/reducers.ts","hooks/useHeroSearch.ts","components/Header/Header.tsx","components/Main/HeroImage.tsx","store/selectors.ts","hooks/useFavoriteHero.ts","store/utils.ts","components/Main/HeroCard.tsx","components/Main/HeroesList.tsx","components/ui/ErrorMessage.tsx","components/ui/Loader.tsx","hooks/useServersRequest.ts","components/Main/Main.tsx","components/Main/utils.ts","pages/HomePage/HomePage.tsx","pages/HeroPage/HeroCharacteristics.tsx","pages/HeroPage/HeroPage.tsx","App.tsx","index.tsx"],"names":["ActionTypes","UrlSearchOptions","ServerFetchUrls","SessionStorage","initialState","favoriteHeroesIDs","store","createStore","state","action","type","SET_FAVORITE_HEROES","ADD_FAVORITE_HERO","heroId","REMOVE_FAVORITE_HERO","composeWithDevTools","applyMiddleware","thunk","Header","history","useHistory","search","useLocation","searchParams","URLSearchParams","isFavoriteHeroesShowed","get","IsFavorite","useState","searchValue","setSearchValue","useEffect","trimmedValue","trim","set","HeroName","delete","location","includes","toString","push","useHeroSearch","Box","display","height","minWidth","Input","placeholder","fullWidth","color","value","onChange","event","target","Button","variant","size","name","onClick","HeroImage","heroName","avatarSrc","isLoaded","setIsLoaded","Skeleton","style","margin","animation","width","src","onLoad","alt","title","stateFavoriteHeroesByID","useFavoriteHero","id","heroes","dispatch","useDispatch","favoriteHeroesIDS","useSelector","isFavorite","sessionStorage","setItem","FavoriteHeroes","JSON","stringify","addFavoriteHero","removeFavoriteHero","HeroCard","hero","setAsFavorite","unsetAsFavorite","images","md","ImageListItemBar","to","position","actionIcon","IconButton","Favorite","FavoriteBorder","actionPosition","StyledImageListItem","withStyles","root","cursor","ImageListItem","HeroesList","isMobile","showedHeroes","length","ImageList","cols","gap","rowHeight","map","ErrorMessage","text","Container","Typography","align","Loader","justifyContent","alignItems","mt","CircularProgress","thickness","useServersRequest","url","isLoading","setIsLoading","data","setData","isError","setIsError","fetchData","a","fetch","response","status","Error","json","console","warn","Main","theme","useTheme","isOnlyFavorite","setIsOnlyFavorite","useMediaQuery","breakpoints","down","AllHeroes","favoriteHeroes","useMemo","filter","page","setPage","heroesPerPage","heroesSearchedByName","query","toLowerCase","paginationPagesQuantity","Math","ceil","paginatedHeroes","selectedPage","pagesQuantity","startIndex","endIndex","slice","definePaginatedHeroes","ifNoFavoriteHeroes","isHeroesLoadedSuccessfully","maxWidth","Pagination","count","HomePageBox","component","flexDirection","px","HomePage","StyledAccordion","Accordion","HeroCharacteristics","heroPowerstats","Object","keys","powerstats","heroAppearance","appearance","heroBiography","biography","heroConnections","connections","heroWork","work","mr","lg","flexWrap","AccordionSummary","expandIcon","AccordionDetails","stat","app","bio","noWrap","connection","HeroPageBox","HeroPage","useParams","heroUrl","HeroDataById","App","storageData","getItem","parse","getFavoriteHeroesFromSessionStorage","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60d6bd6d.chunk.js","sourcesContent":["import { FavoriteHeroesIDs } from \"types\";\n\nexport enum ActionTypes {\n  SET_FAVORITE_HEROES = \"SET_FAVORITE_HEROES\",\n  CLEAR_FAVORITE_HEROES = \"CLEAR_FAVORITE_HEROES\",\n  ADD_FAVORITE_HERO = \"ADD_FAVORITE_HERO\",\n  REMOVE_FAVORITE_HERO = \"REMOVE_FAVORITE_HERO\",\n}\n\nexport type SetFavoriteHeroesHeroes = {\n  type: ActionTypes.SET_FAVORITE_HEROES;\n  favoriteHeroesIDs: FavoriteHeroesIDs;\n};\n\nexport type AddFavoriteHero = {\n  type: ActionTypes.ADD_FAVORITE_HERO;\n  heroId: number;\n};\n\nexport type RemoveFavoriteHero = {\n  type: ActionTypes.REMOVE_FAVORITE_HERO;\n  heroId: number;\n};\n\nexport type Actions =\n  | SetFavoriteHeroesHeroes\n  | AddFavoriteHero\n  | RemoveFavoriteHero;\n\n// Action creators - a function returning an action object\nexport const setFavoriteHeroes = (\n  favoriteHeroesIDs: FavoriteHeroesIDs\n): Actions => ({\n  type: ActionTypes.SET_FAVORITE_HEROES,\n  favoriteHeroesIDs: favoriteHeroesIDs,\n});\n\nexport const addFavoriteHero = (heroId: number): Actions => ({\n  type: ActionTypes.ADD_FAVORITE_HERO,\n  heroId: heroId,\n});\n\nexport const removeFavoriteHero = (heroId: number): Actions => ({\n  type: ActionTypes.REMOVE_FAVORITE_HERO,\n  heroId: heroId,\n});\n","interface ISimpleParams {\n  [key: string]: string | number;\n}\n\ninterface IArrayParams {\n  [key: string]: string | string[];\n}\n\ninterface Appearance extends IArrayParams {\n  eyeColor: string;\n  gender: string;\n  hairColor: string;\n  height: string[];\n  race: string;\n  weight: string[];\n}\n\ninterface Biography extends IArrayParams {\n  aliases: string[];\n  alignment: string;\n  alterEgos: string;\n  firstAppearance: string;\n  fullName: string;\n  placeOfBirth: string;\n  publisher: string;\n}\n\ninterface Connections extends ISimpleParams {\n  groupAffiliation: string;\n  relatives: string;\n}\n\ninterface Images {\n  lg: string;\n  md: string;\n  sm: string;\n  xs: string;\n}\n\ninterface Powerstats extends ISimpleParams {\n  combat: number;\n  durability: number;\n  intelligence: number;\n  power: number;\n  speed: number;\n  strength: number;\n}\n\ninterface Work extends ISimpleParams {\n  base: string;\n  occupation: string;\n}\n\nexport interface HeroData {\n  id: number;\n  appearance: Appearance;\n  biography: Biography;\n  connections: Connections;\n  images: Images;\n  name: string;\n  powerstats: Powerstats;\n  slug: string;\n  work: Work;\n  isFavorite?: boolean;\n}\n\nexport enum UrlSearchOptions {\n  HeroName = \"heroName\",\n  IsFavorite = \"isFavorites\",\n}\n\nexport enum ServerFetchUrls {\n  AllHeroes = \"https://akabab.github.io/superhero-api/api/all.json\",\n  HeroDataById = \"https://akabab.github.io/superhero-api/api/id/\",\n  WrongUrl = \"https://akabab.github.io/superhero-api/api/0.json\",\n}\n\nexport enum SessionStorage {\n  FavoriteHeroes = \"FavoriteHeroes\",\n}\n\nexport type FavoriteHeroesIDs = {\n  [key: number]: boolean;\n};\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport { FavoriteHeroesIDs } from \"types\";\nimport { rootReducer } from \"./reducers\";\n\nexport type RootState = {\n  favoriteHeroesIDs: FavoriteHeroesIDs;\n};\n\n// Initial state\nexport const initialState: RootState = {\n  favoriteHeroesIDs: {},\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import { initialState, RootState } from \"store/rootStore\";\nimport { Actions, ActionTypes } from \"./actions\";\n\nexport const rootReducer = (\n  state = initialState,\n  action: Actions\n): RootState => {\n  switch (action.type) {\n    case ActionTypes.SET_FAVORITE_HEROES:\n      return {\n        ...state,\n        favoriteHeroesIDs: action.favoriteHeroesIDs,\n      };\n\n    case ActionTypes.ADD_FAVORITE_HERO:\n      return {\n        ...state,\n        favoriteHeroesIDs: {\n          ...state.favoriteHeroesIDs,\n          [action.heroId]: true,\n        },\n      };\n\n    case ActionTypes.REMOVE_FAVORITE_HERO:\n      return {\n        ...state,\n        favoriteHeroesIDs: {\n          ...state.favoriteHeroesIDs,\n          [action.heroId]: false,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n","import { useHistory, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport { UrlSearchOptions } from \"types\";\n\ntype TypeUseHeroSearch = () => [\n  searchValue: string,\n  setSearchValue: (value: string) => void\n];\n\nexport const useHeroSearch: TypeUseHeroSearch = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const { search } = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(search);\n    const trimmedValue = searchValue.trim();\n\n    if (trimmedValue) {\n      searchParams.set(UrlSearchOptions.HeroName, trimmedValue);\n    } else {\n      searchParams.delete(UrlSearchOptions.HeroName);\n    }\n\n    if (!history.location.search.includes(searchParams.toString())) {\n      history.push(`?${searchParams.toString()}`);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchValue, history.location.search]);\n\n  return [searchValue, setSearchValue];\n};\n","import React, { FC } from \"react\";\nimport { Box, Button, Input } from \"@material-ui/core\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { useHeroSearch } from \"hooks/useHeroSearch\";\nimport { UrlSearchOptions } from \"types\";\n\nconst Header: FC = () => {\n  const history = useHistory();\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const isFavoriteHeroesShowed = searchParams.get(UrlSearchOptions.IsFavorite);\n  const [searchValue, setSearchValue] = useHeroSearch();\n\n  const toggleIsFavouriteInUrl = (): void => {\n    if (searchParams.get(UrlSearchOptions.IsFavorite)) {\n      searchParams.delete(UrlSearchOptions.IsFavorite);\n    } else {\n      searchParams.set(UrlSearchOptions.IsFavorite, \"true\");\n    }\n\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <header>\n      <Box display=\"flex\" height=\"50px\" minWidth=\"300px\">\n        <Input\n          placeholder=\"Enter hero name\"\n          fullWidth={true}\n          color=\"primary\"\n          value={searchValue}\n          onChange={(event): void => setSearchValue(event.target.value)}\n        />\n\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          fullWidth={true}\n          color={isFavoriteHeroesShowed ? \"primary\" : \"secondary\"}\n          name=\"toggle-favorite-heroes\"\n          data-testid=\"header-button-heroes\"\n          onClick={toggleIsFavouriteInUrl}\n        >\n          {isFavoriteHeroesShowed ? \"All Heroes\" : \"Favorite Heroes\"}\n        </Button>\n      </Box>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, useState } from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\ntype PropsHeroImage = {\n  heroName: string;\n  avatarSrc: string;\n};\nexport const HeroImage: FC<PropsHeroImage> = ({ heroName, avatarSrc }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  return (\n    <>\n      {isLoaded ? null : (\n        <Skeleton\n          style={{ margin: \"auto\" }}\n          animation=\"pulse\"\n          variant=\"circle\"\n          width={\"70%\"}\n          height={\"70%\"}\n        />\n      )}\n\n      <img\n        style={isLoaded ? {} : { display: \"none\" }} // TODO css in js;\n        src={`${avatarSrc}`}\n        onLoad={(): void => {\n          setIsLoaded(true);\n        }}\n        alt={`${heroName} avatar`}\n        title={heroName}\n        width=\"100%\"\n      />\n    </>\n  );\n};\n","import { RootState } from \"./rootStore\";\nimport { FavoriteHeroesIDs } from \"types\";\n\nexport const stateFavoriteHeroesByID = (state: RootState): FavoriteHeroesIDs =>\n  state.favoriteHeroesIDs;\n\n//todo reselect? memoisation?\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { stateFavoriteHeroesByID } from \"store/selectors\";\nimport { addFavoriteHero, removeFavoriteHero } from \"store/actions\";\nimport { setFavoriteHeroesToSessionStorage } from \"store/utils\";\n\ntype TypeUseFavoriteHero = (\n  id: number | undefined\n) => [\n  setAsFavorite: () => void,\n  unsetAsFavorite: () => void,\n  isFavorite: boolean\n];\n\nexport const useFavoriteHero: TypeUseFavoriteHero = (\n  id: number | undefined\n) => {\n  const dispatch = useDispatch();\n  const favoriteHeroesIDS = useSelector(stateFavoriteHeroesByID);\n\n  const heroId = id ? id : -1;\n\n  const setAsFavorite = (): void => {\n    dispatch(addFavoriteHero(heroId));\n  };\n\n  const unsetAsFavorite = (): void => {\n    dispatch(removeFavoriteHero(heroId));\n  };\n\n  const isFavorite = favoriteHeroesIDS[heroId];\n\n  setFavoriteHeroesToSessionStorage(favoriteHeroesIDS);\n\n  return [setAsFavorite, unsetAsFavorite, isFavorite];\n};\n","import { FavoriteHeroesIDs, SessionStorage } from \"types\";\n\nexport const setFavoriteHeroesToSessionStorage = (\n  heroes: FavoriteHeroesIDs\n): void => {\n  sessionStorage.setItem(SessionStorage.FavoriteHeroes, JSON.stringify(heroes));\n};\n\nexport const getFavoriteHeroesFromSessionStorage = (): FavoriteHeroesIDs => {\n  const storageData = sessionStorage.getItem(SessionStorage.FavoriteHeroes);\n\n  const favoriteHeroes = storageData ? JSON.parse(storageData) : {};\n\n  return favoriteHeroes;\n};\n","import { HeroData } from \"types\";\nimport React, { FC } from \"react\";\nimport { IconButton, ImageListItemBar } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\nimport { HeroImage } from \"components/Main/HeroImage\";\nimport { useFavoriteHero } from \"hooks/useFavoriteHero\";\n\ntype PropsHeroCard = {\n  hero: HeroData;\n};\n\nexport const HeroCard: FC<PropsHeroCard> = ({ hero }) => {\n  const [setAsFavorite, unsetAsFavorite, isFavorite] = useFavoriteHero(hero.id);\n\n  return (\n    <>\n      <HeroImage avatarSrc={hero.images.md} heroName={hero.name} />\n\n      <ImageListItemBar\n        title={\n          <NavLink to={`/hero/${hero.name}/id/${hero.id}`}>{hero.name}</NavLink>\n        }\n        position=\"bottom\"\n        actionIcon={\n          isFavorite ? (\n            <IconButton\n              aria-label={`heart ${hero.name}`}\n              onClick={unsetAsFavorite}\n            >\n              <Favorite\n                color=\"error\"\n                data-testid={`icon-favorite-${hero.id}`}\n              />\n            </IconButton>\n          ) : (\n            <IconButton\n              aria-label={`heart ${hero.name}`}\n              onClick={setAsFavorite}\n            >\n              <FavoriteBorder\n                color=\"error\"\n                data-testid={`icon-not-favorite-${hero.id}`}\n              />\n            </IconButton>\n          )\n        }\n        actionPosition=\"left\"\n      />\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Box, ImageList, ImageListItem } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { HeroData } from \"types\";\nimport { HeroCard } from \"components/Main/HeroCard\";\n\ntype PropsHeroesList = {\n  isMobile: boolean;\n  showedHeroes: HeroData[];\n};\n\nconst StyledImageListItem = withStyles({\n  root: {\n    cursor: \"pointer\",\n  },\n})(ImageListItem);\n\nconst HeroesList: FC<PropsHeroesList> = ({ isMobile, showedHeroes }) => {\n  return (\n    <Box>\n      {showedHeroes.length > 0 && (\n        <ImageList cols={isMobile ? 3 : 6} gap={2} rowHeight={160}>\n          {showedHeroes.map((hero) => (\n            <StyledImageListItem key={hero.id}>\n              <HeroCard hero={hero} />\n            </StyledImageListItem>\n          ))}\n        </ImageList>\n      )}\n    </Box>\n  );\n};\n\nexport default HeroesList;\n","import React, { FC } from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\n\ntype ErrorMessageProps = {\n  text: string;\n};\n\nconst ErrorMessage: FC<ErrorMessageProps> = ({ text }) => {\n  return (\n    <Container>\n      <Typography variant=\"h4\" align=\"center\" color=\"error\">\n        {text}\n      </Typography>\n    </Container>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { FC } from \"react\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\n\nconst Loader: FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      mt=\"100px\"\n      data-testid=\"loader\"\n    >\n      <CircularProgress size={200} variant=\"indeterminate\" thickness={3} />\n    </Box>\n  );\n};\n\nexport default Loader;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { HeroData, ServerFetchUrls } from \"types\";\n\ntype ResponseData<T> = T extends ServerFetchUrls.AllHeroes\n  ? HeroData[]\n  : HeroData;\n\nexport interface UseServersResponse<T extends ServerFetchUrls> {\n  isLoading: boolean;\n  data: ResponseData<T> | null;\n  isError: boolean;\n}\n\nexport const useServersRequest = <T extends ServerFetchUrls>(\n  url: string\n): UseServersResponse<T> => {\n  const dispatch = useDispatch();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<ResponseData<T> | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async (): Promise<void> => {\n      try {\n        const response = await fetch(url);\n\n        if (response?.status > 299) {\n          throw new Error(\"Response status > 299\");\n        }\n\n        const data = await response?.json();\n\n        setData(data);\n      } catch (error) {\n        console.warn(error);\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url, dispatch]);\n\n  return { isLoading, data, isError };\n};\n","import React, { FC, useEffect, useMemo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Box, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nimport HeroesList from \"./HeroesList\";\nimport ErrorMessage from \"components/ui/ErrorMessage\";\nimport Loader from \"components/ui/Loader\";\n// import { stateFavoriteHeroes } from \"store/selectors\";\nimport { useServersRequest } from \"hooks/useServersRequest\";\nimport { definePaginatedHeroes } from \"./utils\";\nimport { UrlSearchOptions, ServerFetchUrls } from \"types\";\nimport { stateFavoriteHeroesByID } from \"store/selectors\";\n\nconst Main: FC = () => {\n  const theme = useTheme();\n  const [isOnlyFavorite, setIsOnlyFavorite] = useState(false);\n  const favoriteHeroesIDs = useSelector(stateFavoriteHeroesByID);\n  // const favoriteHeroes = useSelector(stateFavoriteHeroes);\n\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const {\n    isLoading,\n    data: heroes,\n    isError,\n  } = useServersRequest<ServerFetchUrls.AllHeroes>(ServerFetchUrls.AllHeroes);\n\n  const favoriteHeroes = useMemo(() => {\n    return heroes ? heroes.filter((hero) => favoriteHeroesIDs[hero.id]) : [];\n  }, [favoriteHeroesIDs, heroes]);\n\n  const [page, setPage] = useState(1);\n  const { search } = useLocation();\n\n  const searchParams = useMemo(() => {\n    return new URLSearchParams(search);\n  }, [search]);\n\n  useEffect(() => {\n    if (searchParams.get(UrlSearchOptions.IsFavorite)) {\n      setIsOnlyFavorite(true);\n    } else {\n      setIsOnlyFavorite(false);\n    }\n  }, [search, searchParams]);\n\n  const heroesPerPage = isMobile ? 12 : 24;\n\n  const handlePageChange = (\n    event: React.ChangeEvent<unknown>,\n    value: number\n  ): void => {\n    setPage(value);\n  };\n\n  const heroesSearchedByName = useMemo(() => {\n    const query = searchParams.get(\"heroName\")?.toLowerCase() || \"\";\n\n    if (heroes) {\n      if (query.length >= 3) {\n        return heroes.filter((hero) =>\n          hero.name.toLowerCase()?.includes(query)\n        );\n      } else {\n        return heroes;\n      }\n    } else {\n      return [];\n    }\n  }, [heroes, searchParams]);\n\n  const paginationPagesQuantity = useMemo(() => {\n    if (isOnlyFavorite) {\n      return Math.ceil(favoriteHeroes.length / heroesPerPage) || 1;\n    } else {\n      return Math.ceil(heroesSearchedByName.length / heroesPerPage) || 1;\n    }\n  }, [favoriteHeroes, heroesSearchedByName, heroesPerPage, isOnlyFavorite]);\n\n  const paginatedHeroes = useMemo(() => {\n    const heroesForPagination = isOnlyFavorite\n      ? favoriteHeroes\n      : heroesSearchedByName;\n\n    return definePaginatedHeroes(\n      heroesForPagination,\n      page,\n      heroesPerPage,\n      paginationPagesQuantity\n    );\n  }, [\n    page,\n    heroesPerPage,\n    paginationPagesQuantity,\n    heroesSearchedByName,\n    isOnlyFavorite,\n    favoriteHeroes,\n  ]);\n\n  const ifNoFavoriteHeroes = isOnlyFavorite && !paginatedHeroes.length;\n  const isHeroesLoadedSuccessfully =\n    !isLoading && !isError && paginatedHeroes.length > 0;\n\n  return (\n    <main>\n      <Box\n        maxWidth={isMobile ? \"sm\" : \"lg\"}\n        minWidth={isMobile ? \"300px\" : \"600px\"}\n        mt=\"6px\"\n      >\n        {isLoading && <Loader />}\n\n        {isError && <ErrorMessage text=\"Loading error. Reload page\" />}\n\n        {ifNoFavoriteHeroes && (\n          <Typography variant=\"h5\" align=\"center\">\n            You don't have favourite heroes yet\n          </Typography>\n        )}\n\n        {isHeroesLoadedSuccessfully && (\n          <>\n            <HeroesList isMobile={isMobile} showedHeroes={paginatedHeroes} />\n\n            <Box display=\"flex\" justifyContent=\"center\" mt=\"6px\">\n              <Pagination\n                count={paginationPagesQuantity}\n                size=\"small\"\n                page={page}\n                onChange={handlePageChange}\n              />\n            </Box>\n          </>\n        )}\n      </Box>\n    </main>\n  );\n};\n\nexport default Main;\n","import { HeroData } from \"types\";\n\ntype TypeDefinePaginatedHeroes = (\n  heroes: HeroData[] | [],\n  page: number,\n  heroesPerPage: number,\n  pagesQuantity: number\n) => HeroData[] | [];\n\nexport const definePaginatedHeroes: TypeDefinePaginatedHeroes = (\n  heroes,\n  selectedPage,\n  heroesPerPage,\n  pagesQuantity\n) => {\n  if (!heroes.length) return [];\n\n  const startIndex = (selectedPage - 1) * heroesPerPage;\n  const endIndex =\n    selectedPage > pagesQuantity ? selectedPage : heroesPerPage * selectedPage;\n\n  return heroes.slice(startIndex, endIndex);\n};\n","import { FC } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nimport Header from \"components/Header/Header\";\nimport Main from \"components/Main/Main\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst HomePageBox = withStyles({\n  root: {\n    component: \"div\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\",\n    px: \"24px\",\n  },\n})(Box);\n\nconst HomePage: FC = () => {\n  return (\n    <HomePageBox>\n      <Header />\n\n      <Main />\n    </HomePageBox>\n  );\n};\n\nexport default HomePage;\n","import React, { FC } from \"react\";\nimport {\n  Box,\n  Typography,\n  useMediaQuery,\n  useTheme,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ErrorMessage from \"components/ui/ErrorMessage\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nimport { HeroData } from \"types\";\nimport { useFavoriteHero } from \"hooks/useFavoriteHero\";\n\ntype HeroDataProps = {\n  hero: HeroData | null;\n};\n\n// TODO: adjust styling. Make responsible markup for the Accordion\nconst StyledAccordion = withStyles({\n  root: {\n    minWidth: \"300px\",\n    cursor: \"pointer\",\n  },\n})(Accordion);\n\nconst HeroCharacteristics: FC<HeroDataProps> = ({ hero }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [setAsFavorite, unsetAsFavorite, isFavorite] = useFavoriteHero(\n    hero?.id\n  );\n\n  const heroPowerstats = hero ? Object.keys(hero.powerstats) : [];\n  const heroAppearance = hero ? Object.keys(hero.appearance) : [];\n  const heroBiography = hero ? Object.keys(hero.biography) : [];\n  const heroConnections = hero ? Object.keys(hero.connections) : [];\n  const heroWork = hero ? Object.keys(hero.work) : [];\n\n  return (\n    <>\n      <Typography\n        variant={isMobile ? \"h4\" : \"h2\"}\n        align=\"center\"\n        data-testid=\"header-hero-name\"\n      >\n        {hero?.name}\n        <>\n          {isFavorite ? (\n            <IconButton\n              aria-label={`heart-hero-page ${hero?.name}`}\n              onClick={(): void => {\n                unsetAsFavorite();\n              }}\n            >\n              <Favorite\n                color=\"error\"\n                data-testid={`icon-favorite-hero-page-${hero?.id}`}\n              />\n            </IconButton>\n          ) : (\n            <IconButton\n              aria-label={`heart-hero-page ${hero?.name}`}\n              onClick={(): void => {\n                setAsFavorite();\n              }}\n            >\n              <FavoriteBorder\n                color=\"error\"\n                data-testid={`icon-not-favorite-hero-page-${hero?.id}`}\n              />\n            </IconButton>\n          )}\n        </>\n      </Typography>\n      <Box display=\"flex\" flexDirection={isMobile ? \"column\" : \"row\"}>\n        {hero && (\n          <>\n            <Box\n              mr={2}\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <img\n                src={isMobile ? `${hero.images.md}` : `${hero.images.lg}`}\n                alt={hero?.name}\n                title={hero?.name}\n              />\n            </Box>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              flexWrap=\"wrap\"\n              minWidth={isMobile ? \"320px\" : \"640px\"}\n            >\n              <StyledAccordion variant=\"outlined\">\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                  title=\"Powerstats\"\n                >\n                  <Typography>Powerstats</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {heroPowerstats.map((stat: string) => (\n                    <Typography key={stat} variant=\"caption\">\n                      <br />\n                      <p>\n                        {stat} : {hero?.powerstats[stat]}\n                      </p>{\" \"}\n                      <br />\n                    </Typography>\n                  ))}\n                </AccordionDetails>\n              </StyledAccordion>\n\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                  title=\"Appearance\"\n                >\n                  <Typography>Appearance</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {heroAppearance.map((app: string) => (\n                    <Typography key={app}>\n                      {app} :{\" \"}\n                      {app === \"height\"\n                        ? hero?.appearance[\"height\"][1]\n                        : app === \"weight\"\n                        ? hero?.appearance[\"weight\"][1]\n                        : hero?.appearance[app]}\n                    </Typography>\n                  ))}\n                </AccordionDetails>\n              </Accordion>\n\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                  title=\"Biography\"\n                >\n                  <Typography>Biography</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {heroBiography.map((bio: string) => (\n                    <Typography key={bio} noWrap={false}>\n                      {bio} : {hero?.biography[bio]}\n                    </Typography>\n                  ))}\n                </AccordionDetails>\n              </Accordion>\n\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                  title=\"Connections\"\n                >\n                  <Typography>Connections</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {heroConnections.map((connection: string) => (\n                    <Typography key={connection}>\n                      {connection} : {hero?.connections[connection]}\n                    </Typography>\n                  ))}\n                </AccordionDetails>\n              </Accordion>\n\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                  title=\"Work\"\n                >\n                  <Typography>Work</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {heroWork.map((work: string) => (\n                    <Typography key={work}>\n                      {work} : {hero?.work[work]}\n                    </Typography>\n                  ))}\n                </AccordionDetails>\n              </Accordion>\n            </Box>\n          </>\n        )}\n\n        {!hero && <ErrorMessage text=\"No such hero found\" />}\n      </Box>\n    </>\n  );\n};\n\nexport default HeroCharacteristics;\n","import React, { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport HeroCharacteristics from \"./HeroCharacteristics\";\nimport { ServerFetchUrls } from \"types\";\nimport { useServersRequest } from \"hooks/useServersRequest\";\nimport Loader from \"components/ui/Loader\";\nimport ErrorMessage from \"components/ui/ErrorMessage\";\n\nconst HeroPageBox = withStyles({\n  root: {\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst HeroPage: FC = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const { heroId } = useParams<{ heroId: string }>();\n  const heroUrl = `${ServerFetchUrls.HeroDataById}${heroId}.json`;\n\n  const {\n    isLoading,\n    data: hero,\n    isError,\n  } = useServersRequest<ServerFetchUrls.HeroDataById>(heroUrl);\n\n  const isHeroesLoadedSuccessfully = !isLoading && !isError;\n\n  return (\n    <HeroPageBox\n      maxWidth={isMobile ? \"sm\" : \"lg\"}\n      minWidth={isMobile ? \"320px\" : \"600px\"}\n    >\n      {isLoading && <Loader />}\n\n      {isError && <ErrorMessage text=\"Loading error. Reload page\" />}\n\n      {isHeroesLoadedSuccessfully && <HeroCharacteristics hero={hero} />}\n    </HeroPageBox>\n  );\n};\n\nexport default HeroPage;\n","import { FC } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport HomePage from \"pages/HomePage/HomePage\";\nimport HeroPage from \"pages/HeroPage/HeroPage\";\nimport { getFavoriteHeroesFromSessionStorage } from \"store/utils\";\nimport { setFavoriteHeroes } from \"store/actions\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  dispatch(setFavoriteHeroes(getFavoriteHeroesFromSessionStorage()));\n\n  return (\n    <Switch>\n      <Route path=\"/home\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/hero/:heroName/id/:heroId\" exact>\n        <HeroPage />\n      </Route>\n      <Redirect to=\"/home\" />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport store from \"store/rootStore\";\nimport App from \"App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}